name: (trigger diff test/sync)

on:
  workflow_call:
    inputs:
      source:
        required: true
        type: string
      branch:
        required: true
        type: string
      test:
        required: true
        type: boolean

jobs:
  diff:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üîé The name of your branch is ${{ github.head_ref }} and your repository is ${{ github.repository }}."
      - name: Check out tokens-studio-data code
        uses: actions/checkout@v4
        with:
          path: spectrum-tokens-studio-data
      - name: Check out spectrum-tokens code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/spectrum-tokens
          path: spectrum-tokens
          ref: ${{ inputs.branch }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.13.x
      - name: Test the token data
        if: ${{ inputs.test == true }}
        run: |
          node spectrum-tokens-studio-data/.github/workflows/diff.js -test -source=./spectrum-tokens-studio-data/src/tokens-studio/${{ inputs.source }}/ -destination=./spectrum-tokens/packages/tokens/src/
          echo -e "**TESTING ${{ inputs.source }}**\n\n$(cat cout.log)" > cout.log
      - name: Sync the token data
        if: ${{ inputs.test == false }}
        run: |
          node spectrum-tokens-studio-data/.github/workflows/diff.js -source=./spectrum-tokens-studio-data/src/tokens-studio/${{ inputs.source }}/ -destination=./spectrum-tokens/packages/tokens/src/
          echo -e "**SYNCING ${{ inputs.source }}**\n\n$(cat cout.log)" > cout.log
      - name: Add action link to log
        run: |
          echo >> cout.log
          echo "[Action URL](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> cout.log
      - name: Create spectrum-tokens PR...
        if: ${{ inputs.test == false }}
        id: cpr-spectrum-tokens
        uses: peter-evans/create-pull-request@v5
        with:
          path: spectrum-tokens
          branch: tokens-sync/patch-${{ inputs.source }}
          title: "feat: updates from tokens-studio sync operation"
          body: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          token: ${{ secrets.GH_TOKEN }}
      - name: Check spectrum-tokens PR
        if: ${{ inputs.test == false && steps.cpr-spectrum-tokens.outputs.pull-request-number }}
        run: |
          echo "[Spectrum Tokens Pull Request URL](${{ steps.cpr-spectrum-tokens.outputs.pull-request-url }})" >> cout.log
      - name: Create spectrum-tokens-studio-data PR...
        if: ${{ inputs.test == false }}
        id: cpr-tokens-studio
        uses: peter-evans/create-pull-request@v5
        with:
          path: spectrum-tokens-studio-data
          branch: tokens-sync/patch#${{ steps.cpr-spectrum-tokens.outputs.pull-request-number }}
          title: "feat: updates from spectrum-tokens sync operation"
          body: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          token: ${{ secrets.GH_TOKEN }}
      - name: Check tokens-studio PR
        if: ${{ inputs.test == false && steps.cpr-tokens-studio.outputs.pull-request-number }}
        run: |
          echo "[Tokens Studio Pull Request URL](${{ steps.cpr-tokens-studio.outputs.pull-request-url }})" >> cout.log
      - name: Add change logs to summary
        if: ${{ hashFiles('./logs/*.json') != '' }}
        run: |
          echo >> cout.log
          for file in ./logs/*; do echo '<details><summary>'; echo $file; echo '</summary>'; echo '<p>`'; echo; cat $file; echo; echo '`</p></details>'; echo; done >> cout.log
      - name: Archive change logs
        if: ${{ hashFiles('./logs/*.json') != '' }}
        uses: actions/upload-artifact@v3
        with:
          name: changes
          path: ./logs/*.json
      - name: Append script summary to PR
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          gh pr comment ${{ github.event.number }} --body-file cout.log --repo ${{ github.repository}}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Log the script summary
        run: |
          cat cout.log >> $GITHUB_STEP_SUMMARY
      - run: echo "üçè This job's status is ${{ job.status }}."